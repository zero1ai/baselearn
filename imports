// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

// SillyStringUtils Library
library SillyStringUtils {
    struct Haiku {
        string line1;
        string line2;
        string line3;
    }

    function shruggie(string memory _input) internal pure returns (string memory) {
        return string.concat(_input, unicode" ðŸ¤·");
    }
}

// Main Contract
contract ImportsExercise {
    // Using the SillyStringUtils library
    using SillyStringUtils for *;

    // Public instance of Haiku
    SillyStringUtils.Haiku public haiku;

    // Function to save the haiku
    function saveHaiku(string memory _line1, string memory _line2, string memory _line3) public {
        haiku.line1 = _line1;
        haiku.line2 = _line2;
        haiku.line3 = _line3;
    }

    // Function to get the haiku as a Haiku type
    function getHaiku() public view returns (SillyStringUtils.Haiku memory) {
        return haiku;
    }

    // Function to return a modified haiku with ðŸ¤· added to line3
    function shruggieHaiku() public view returns (SillyStringUtils.Haiku memory) {
        // Create a copy of the original haiku
        SillyStringUtils.Haiku memory modifiedHaiku = haiku;
        // Modify line3 using the shruggie function from the library
        modifiedHaiku.line3 = modifiedHaiku.line3.shruggie();
        return modifiedHaiku;
    }
}
